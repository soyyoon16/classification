ml_app.train
============

.. py:module:: ml_app.train


Classes
-------

.. autoapisummary::

   ml_app.train.Model


Module Contents
---------------

.. py:class:: Model(test_size=0.5)

   A machine learning model for classifying the Iris dataset using the K-Nearest Neighbors (KNN) algorithm.

   .. attribute:: dataset

      The name of the dataset used ('iris').

      :type: str

   .. attribute:: architecture

      The name of the model architecture ('KNN').

      :type: str

   .. attribute:: features

      List of feature names used in the dataset.

      :type: list

   .. attribute:: labels

      List of target labels for the dataset.

      :type: list

   .. attribute:: _train_data

      Tuple containing training data (X_train, y_train).

      :type: tuple

   .. attribute:: _eval_data

      Tuple containing evaluation data (X_test, y_test).

      :type: tuple

   .. attribute:: model

      The trained KNN model.

      :type: KNeighborsClassifier

   .. attribute:: eval

      Accuracy score of the model on the evaluation dataset.

      :type: float

   .. method:: __call__(data)

      Predicts the labels for the given data.

   .. method:: _init_data(test_size)

      Initializes and splits the Iris dataset into training and evaluation sets.

   .. method:: _score()

      Evaluates the model and returns the accuracy score.

   .. method:: _train(test_size)

      Trains the KNN model using the Iris dataset.
      


   .. py:attribute:: dataset
      :value: 'iris'



   .. py:attribute:: architecture
      :value: 'KNN'



   .. py:method:: __call__(data)

      Predicts labels for the given input data using the trained model.

      :param data: The input data records to predict. Each record should have the same number
      :type data: list of list of float/int
      :param of features as the model was trained on.:

      :Yields: *str* -- Predicted label for each input data record.

      :raises ValueError: If the input data record is malformed (i.e., incorrect number of features or non-numeric values).



   .. py:method:: _init_data(test_size=0.5)

      Loads the Iris dataset and splits it into training and evaluation sets.

      :param test_size: Proportion of the dataset to be used for testing. Default is 0.5.
      :type test_size: float, optional

      Attributes set:
          features (list): List of feature names from the Iris dataset.
          labels (list): List of target labels from the Iris dataset.
          _train_data (tuple): Training data (X_train, y_train).
          _eval_data (tuple): Evaluation data (X_test, y_test).



   .. py:method:: _score()

      Evaluates the trained model using the evaluation dataset and calculates the accuracy score.

      :returns: Accuracy score of the model on the evaluation dataset.
      :rtype: float



   .. py:method:: _train(test_size=0.5)

      Initializes the data and trains the KNN model on the training dataset.

      :param test_size: Proportion of the dataset to be used for testing. Default is 0.5.
      :type test_size: float, optional

      Sets the attributes:
          model (KNeighborsClassifier): Trained KNN model.
          eval (float): Accuracy score of the model on the evaluation dataset.



